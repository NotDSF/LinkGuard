<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://nordcdn.net/ds/css/3.1.1/nord.min.css" integrity="sha384-zz2Vh/uaPtnKKnKq4a8aP/R7ybJEZD3LuwnvmLE+p42C+Zjr2R0Y+PKwdABWc61A" crossorigin="anonymous" />
    <script type="module" src="https://nordcdn.net/ds/components/3.8.0/index.js" integrity="sha384-zvZDBl7G/h/0UeesdZH1CBfL9kfoMi+5/I28m8u8yCgzJC7kohDH3I6XgaMzYnLW" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://nordcdn.net/ds/themes/8.0.1/nord-dark.css" integrity="sha384-4mfQkitA1YUssjHukrfVhopnhPw9eM2tX8Z05rZ/5NJRmDJN1fQp2gGfwydx2SzL" crossorigin="anonymous" />
    <link rel="icon" type="image/x-icon" href="/assets/logo.png">
    <title><%=name%> | Eleutheri Ads</title>
</head>
<body>
    <style>
        body {
            background: var(--n-color-surface);
            margin: 0;
        }

        #info {
            width: 65%;
        }

        nord-stack {
            width: 50%;
        }
    </style>
    
    <style>
        @media screen and (max-width: 600px) {
            nord-stack, #info {
                width: 80%;
                flex-direction: column;
                align-items: center;
            }
        }
    </style>

    <nord-header>
        <h1 class="n-typescale-l">Eleutheri Ads</h1>
        <img src="https://res.cloudinary.com/dlxrsqy04/image/upload/f_auto,q_auto,h_50/d4ecdjm7nxkd45iib96y" alt="" srcset="">
        <nord-button href="https://docs.link.eleutheri.com" slot="end"><nord-icon name="interface-content-book" slot="end"></nord-icon>Documentation</nord-button>
        <nord-button href="./" slot="end"><nord-icon name="interface-home" slot="end"></nord-icon>Home</nord-button>
    </nord-header>

    <nord-empty-state>
        <h2><%=name%></h2>
        <section class="n-grid-4" id="container">
            <div>
                <h3>Page Views</h3>
                <%=views%>
            </div>
            <div>
                <h3>Completed Links</h3>
                <%=completed%>
            </div>
            <div>
                <h3>Failed Links</h3>
                <%=failed%>
            </div>
            <div>
                <h3>Blacklisted Users</h3>
                <%=blacklisted%>
            </div>
        </section>
    </nord-empty-state>

    <nord-divider direction="horizontal"></nord-divider>

    <nord-empty-state id="settings">
        <div class="n-grid-2 n-margin-s">
            <nord-input value="<%=linkone%>" class="n-margin-be-l" label="Ad-Link #1" type="url" id="adone" placeholder="URL" hint="-> link.eleutheri.com/<%=prefix%>/stage-1" required>
                <nord-icon slot="start" name="interface-globe"></nord-icon>
            </nord-input>

            <nord-input value="<%=linktwo%>" label="Ad-Link #2" type="url" id="adtwo" placeholder="URL" hint="-> link.eleutheri.com/<%=prefix%>/stage-2" required>
                <nord-icon slot="start" name="interface-globe"></nord-icon>
            </nord-input>
        </div>


        <section class="n-grid-2 n-margin-m">
            <nord-input value="<%=name%>" class="n-margin-be-l" label="Display Name" id="dname" type="text" placeholder="Name" hint="- Display name for your link" required>
                <nord-icon slot="start" name="text-left-align"></nord-icon>
            </nord-input>
    
            <nord-input value="<%=prefix%>" class="n-margin-be-l" label="URL Prefix" id="pname" type="text" placeholder="Prefix" hint="- Located at: link.eleutheri.com/<%=prefix%>/" oninput="ProjectInput()" disabled>
                <nord-icon slot="start" name="interface-link"></nord-icon>
            </nord-input>

            <nord-input class="n-margin-be-l" value="<%=description%>" label="Description" id="description" type="text" placeholder="Name" hint="- Description for your link" required>
                <nord-icon slot="start" name="text-left-align"></nord-icon>
            </nord-input>

            <nord-input value="<%=webhook%>" label="Discord Webhook" id="awebhook" type="url" placeholder="URL" hint="- Real-time analytics via Webhook" required>
                <nord-icon slot="start" name="interface-globe"></nord-icon>
            </nord-input>

            <nord-input value="<%=serverid%>" label="Server ID" id="serverid" type="text" placeholder="ID" hint="- Your Discord Server ID" required>
                <nord-icon slot="start" name="interface-email"></nord-icon>
            </nord-input>

            <nord-input value="<%=invite%>" label="Server Invite" id="serverinvite" type="url" placeholder="URL"  hint="- Your Discord Invite" required>
                <nord-icon slot="start" name="interface-globe"></nord-icon>
            </nord-input>

            <nord-select value="<%=type%>" label="Session Type" id="ptype" value="script" hint="- Choose how to verify completed links" required>
                <option value="license">License Key</option>
                <option value="discord">Discord ID</option>
            </nord-select>

            <nord-range value="<%=redeem%>" label="Session Duration" id="redeemcooldown" value="<%=redeem%>" min="1" hint="- How long you want a session to last (hours)" max="72" required></nord-range>
        </section>
        
        <nord-button variant="primary" onclick="Save()">Save</nord-button>
    </nord-empty-state>

    <nord-divider direction="horizontal"></nord-divider>

    <nord-modal id="modal" size="s">
        <h2 slot="header" id="title">Create License Key</h2>
        <nord-input class="n-margin-be-l" id="licensekey" label="License Key" type="url" id="adone" value="" placeholder="lgxxxxxx" required>
            <nord-icon slot="start" name="interface-password"></nord-icon>
        </nord-input>
        <nord-date-picker id="licenseexpire" label="Expiry Date"></nord-date-picker>
        <nord-button-group slot="footer" variant="spaced">
            <nord-button expand id="confirmButton" variant="primary" onclick="CreateLicenseModal()" autofocus>Create</nord-button>
        </nord-button-group>
    </nord-modal>

    <nord-empty-state>
        <h2 id="activesession">Active Sessions</h2>
        <nord-button variant="primary" class="n-margin-s" onclick="CreateLicense()">Create a License</nord-button>
        <nord-table>
            <table>
              <thead>
                <tr>
                  <th>Discord ID</th>
                  <th>License Key</th>
                  <th>Stage</th>
                  <th class="n-table-align-right">Created At</th>
                  <th class="n-table-align-right">Expires At</th>
                </tr>
              </thead>
              <tbody id="sessiontable">
                <tr id="sessionentry" style="display: none;">
                    <td>787086729470541844</td>
                    <td>lg3434df</td>
                    <td><nord-badge variant="success">Success</nord-badge></td>
                    <td class="n-caption n-table-align-right">20.3.2021</td>
                    <td class="n-caption n-table-align-right">20.3.2021</td>
                </tr>
              </tbody>
            </table>
        </nord-table>
    </nord-empty-state>

    <script>
        const API_KEY = "<%=api%>";
        const PROJECT_NAME = "<%=prefix%>";

        const RedeemCooldown = document.getElementById("redeemcooldown");
        const ProjectType = document.getElementById("ptype");
        const DisplayName = document.getElementById("dname");
        const WebhookInput = document.getElementById("awebhook");
        const LinkOne = document.getElementById("adone");
        const LinkTwo = document.getElementById("adtwo");
        const ServerID = document.getElementById("serverid");
        const ServerInvite = document.getElementById("serverinvite");
        const Modal = document.getElementById("modal");
        const ActiveSessions = document.getElementById("activesession");
        const SessionEntry = document.getElementById("sessionentry");
        const SessionTable = document.getElementById("sessiontable");
        const DescriptionInput = document.getElementById("description");

        const ModalLicense = document.getElementById("licensekey");
        const ModalExpiry = document.getElementById("licenseexpire");

        async function Save() {
            const packet = await fetch("/v1/validate/project", {
                method: "POST",
                headers: {
                    ["content-type"]: "application/json"
                },
                body: JSON.stringify({
                    Name: PROJECT_NAME,
                    Webhook: WebhookInput.value,
                    ServerInvite: ServerInvite.value,
                    ServerID: ServerID.value,
                    SessionType: ProjectType.value,
                    UserCooldown: RedeemCooldown.value,
                    DisplayName: DisplayName.value
                })
            })

            const body = await packet.json();
            if (packet.status !== 200) {
                return alert(body.error);
            }

            const packet2 = await fetch(`/v1/project/${PROJECT_NAME}`, {
                method: "PUT",
                headers: {
                    ["content-type"]: "application/json",
                    ["lg_access_token"]: API_KEY
                },
                body: JSON.stringify({
                    DisplayName: DisplayName.value,
                    Webhook: WebhookInput.value,
                    ServerInvite: ServerInvite.value,
                    ServerID: ServerID.value,
                    SessionType: ProjectType.value,
                    UserCooldown: RedeemCooldown.value,
                    LinkOne: LinkOne.value,
                    LinkTwo: LinkTwo.value,
                    Description: DescriptionInput.value,
                    Enabled: true
                })
            });
            
            const body2 = await packet2.json();
            if (packet2.status !== 200) {
                return alert(body2.error);
            }

            window.location.reload();
        }

        function AddSessionEntry(id, license, stage, creation, expiry) {
            const cloned = SessionEntry.cloneNode(true);
            cloned.childNodes[1].textContent = id;
            cloned.childNodes[3].textContent = license;
            cloned.childNodes[7].textContent = new Date(creation).toLocaleString();
            cloned.childNodes[9].textContent = expiry ? new Date(expiry).toLocaleString() : "Not Set";

            const badge = cloned.childNodes[5].childNodes[0];
            switch (stage) {
                case "finished":
                    badge.textContent = "Finished";
                    badge.setAttribute("variant", "success");
                    break;
                case "main":
                    badge.textContent = "On Main Page";
                    badge.setAttribute("variant", "info");
                    break;
                case "linking":
                    badge.textContent = "Authorising Discord";
                    badge.setAttribute("variant", "highlight");
                    break;
                case "link-1":
                    badge.textContent = "Link 1";
                    badge.setAttribute("variant", "warning");
                    break;
                case "link-2":
                    badge.textContent = "Link 2";
                    badge.setAttribute("variant", "warning");
                    break;
                default:
                    badge.textContent = stage;
                    badge.setAttribute("variant", "");
                    break;
            }

            cloned.style.display = "";
            SessionTable.appendChild(cloned);
        }

        function CreateLicense() {
            Modal.showModal();
        }

        async function CreateLicenseModal() {
            const packet = await fetch(`/v1/project/${PROJECT_NAME}/licenses/`, {
                method: "POST",
                headers: {
                    ["content-type"]: "application/json",
                    ["lg_access_token"]: API_KEY
                },
                body: JSON.stringify({
                    license: ModalLicense.value,
                    expiry: ModalExpiry.valueAsNumber.toString()
                })
            });
            
            const body = await packet.json();
            if (packet.status !== 200) {
                return alert(body.error);
            }
            
            Modal.close();
            window.location.reload();
        }

        (async () => {
            const packet = await fetch(`/v1/project/${PROJECT_NAME}/sessions/`, {
                headers: {
                    ["lg_access_token"]: API_KEY
                }
            });

            const sessions = await packet.json();

            ActiveSessions.textContent = `Active Sessions (${sessions.length})`;
            for (const { user, expire, creation, license, stage } of sessions) {
                AddSessionEntry(user?.DiscordID || "Anonymous User", license, stage, creation, expire);
            }
        })();
    </script>
</body>
</html>